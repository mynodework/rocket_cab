{"version":3,"sources":["../../src/providers/userProvider.js"],"names":["BaseProvider","provideUser","validate","body","validationResult","Promise","resolve","reject","notEmpty","then","result","isEmpty","array","msg"],"mappings":";;;;;;AAAA;;IAAYA,Y;;AACZ;;;;AACA;;;;;;;;AAEA,IAAMC,cAAc,SAAdA,WAAc,CAACC,QAAD,EAAWC,IAAX,EAAiBC,gBAAjB,EAAsC;AACtD,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,iBAAS,WAAT,EAAsB,6BAAtB,EAAqDM,QAArD;AACAN,iBAAS,OAAT,EAAkB,wBAAlB,EAA4CM,QAA5C;AACAN,iBAAS,UAAT,EAAqB,2BAArB,EAAkDM,QAAlD;AACAJ,yBAAiBK,IAAjB,CAAsB,UAASC,MAAT,EAAiB;AACnC,gBAAI,CAACA,OAAOC,OAAP,EAAL,EAAuB;AACnBJ,uBAAOG,OAAOE,KAAP,GAAe,CAAf,EAAkBC,GAAzB;AACH,aAFD,MAEO;AACHP,wBAAQH,IAAR;AACH;AACJ,SAND;AAOH,KAXM,CAAP;AAYH,CAbD;;kBAgBe;AACXH,8BADW;AAEXC;AAFW,C","file":"userProvider.js","sourcesContent":["import * as BaseProvider from \"./BaseProvider\";\nimport util from \"util\";\nimport crypto from \"crypto\";\n\nconst provideUser = (validate, body, validationResult) => {\n    return new Promise((resolve, reject) => {\n        validate(\"firstName\", \" firstName Required field!!\").notEmpty();\n        validate(\"email\", \"email Required field!!\").notEmpty();\n        validate(\"password\", \"password Required field!!\").notEmpty();\n        validationResult.then(function(result) {\n            if (!result.isEmpty()) {\n                reject(result.array()[0].msg);\n            } else {\n                resolve(body);\n            }\n        });\n    });\n};\n\n\nexport default {\n    BaseProvider,\n    provideUser\n};"]}