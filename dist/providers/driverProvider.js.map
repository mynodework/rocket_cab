{"version":3,"sources":["../../src/providers/driverProvider.js"],"names":["BaseProvider","driverRegistration","validate","body","validationResult","Promise","resolve","reject","notEmpty","then","result","isEmpty","array","msg"],"mappings":";;;;;;AAAA;;IAAYA,Y;;AACZ;;;;AACA;;;;;;;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWC,IAAX,EAAiBC,gBAAjB,EAAsC;AAC7D,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,iBAAS,QAAT,EAAmB,6BAAnB,EAAkDM,QAAlD;AACAN,iBAAS,QAAT,EAAmB,4BAAnB,EAAiDM,QAAjD;AACAN,iBAAS,QAAT,EAAmB,yBAAnB,EAA8CM,QAA9C;AACAN,iBAAS,aAAT,EAAwB,+BAAxB,EAAyDM,QAAzD;AACAN,iBAAS,MAAT,EAAiB,uBAAjB,EAA0CM,QAA1C;AACAN,iBAAS,KAAT,EAAgB,sBAAhB,EAAwCM,QAAxC;AACAN,iBAAS,KAAT,EAAgB,sBAAhB,EAAwCM,QAAxC;AACAN,iBAAS,yBAAT,EAAoC,0CAApC,EAAgFM,QAAhF;AACAN,iBAAS,SAAT,EAAoB,0BAApB,EAAgDM,QAAhD;AACAN,iBAAS,OAAT,EAAkB,wBAAlB,EAA4CM,QAA5C;AACAJ,yBAAiBK,IAAjB,CAAsB,UAASC,MAAT,EAAiB;AACnC,gBAAI,CAACA,OAAOC,OAAP,EAAL,EAAuB;AACnBJ,uBAAOG,OAAOE,KAAP,GAAe,CAAf,EAAkBC,GAAzB;AACH,aAFD,MAEO;AACHP,wBAAQH,IAAR;AACH;AACJ,SAND;AAOH,KAlBM,CAAP;AAmBH,CApBD;;kBAuBe;AACXH,8BADW;AAEXC;AAFW,C","file":"driverProvider.js","sourcesContent":["import * as BaseProvider from \"./BaseProvider\";\nimport util from \"util\";\nimport crypto from \"crypto\";\n\nconst driverRegistration = (validate, body, validationResult) => {\n    return new Promise((resolve, reject) => {\n        validate(\"f_name\", \"first name Required field!!\").notEmpty();\n        validate(\"l_name\", \"last name Required field!!\").notEmpty();\n        validate(\"mobile\", \"mobile Required field!!\").notEmpty();\n        validate(\"profile_pic\", \"profile pic  Required field!!\").notEmpty();\n        validate(\"city\", \"city Required field!!\").notEmpty();\n        validate(\"dob\", \"dob Required field!!\").notEmpty();\n        validate(\"otp\", \"otp Required field!!\").notEmpty();\n        validate(\"driving_lincense_number\", \"driving lincense number Required field!!\").notEmpty();\n        validate(\"working\", \"working Required field!!\").notEmpty();\n        validate(\"token\", \"token Required field!!\").notEmpty();\n        validationResult.then(function(result) {\n            if (!result.isEmpty()) {\n                reject(result.array()[0].msg);\n            } else {\n                resolve(body);\n            }\n        });\n    });\n};\n\n\nexport default {\n    BaseProvider,\n    driverRegistration\n};"]}