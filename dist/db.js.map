{"version":3,"sources":["../src/db.js"],"names":["db","sequelize","process","env","DATABASE","DB_USER","DB_PASSWORD","port","host","HOST","dialect","logging","Object","keys","forEach","modelName","model","DataTypes","err","console","log","associate","sync","then","assign","Sequelize"],"mappings":";;;;;;AAAA;;;;AAEA;;;;;;AAEA,IAAMA,KAAK,EAAX;AAHA;;;AAKA,IAAMC,YAAY,wBAAcC,QAAQC,GAAR,CAAYC,QAA1B,EAAoCF,QAAQC,GAAR,CAAYE,OAAhD,EAClBH,QAAQC,GAAR,CAAYG,WADM,EACO,EAAEC,MAAM,IAAR,EAAcC,MAAMN,QAAQC,GAAR,CAAYM,IAAhC,EAAsCC,SAAQ,OAA9C,EAAsDC,SAAQ,KAA9D,EADP,CAAlB;;AAIA;AACAC,OACKC,IADL,mBAEKC,OAFL,CAEa,UAACC,SAAD,EAAe;AACpB,QAAMC,QAAQ,iBAAOD,SAAP,EAAkBd,SAAlB,EAA6B,oBAAUgB,SAAvC,sBAAd;AACAjB,OAAGe,SAAH,IAAgBC,KAAhB;AACH,CALL,EAKO,UAACE,GAAD,EAAS;AACRC,YAAQC,GAAR,CAAYF,GAAZ;AACH,CAPL;;AASA;AACAN,OACKC,IADL,CACUb,EADV,EAEKc,OAFL,CAEa,UAACC,SAAD,EAAe;AACpB,QAAIf,GAAGe,SAAH,EAAcM,SAAlB,EAA6B;AACzBrB,WAAGe,SAAH,EAAcM,SAAd,CAAwBrB,EAAxB;AACH;AACJ,CANL,EAMO,UAACkB,GAAD,EAAS;AACRC,YAAQC,GAAR,CAAYF,GAAZ;AACH,CARL;;AAUAjB,UACKqB,IADL,GAEKC,IAFL,CAEU,YAAM,CAAE,CAFlB;;kBAIeX,OAAOY,MAAP,CAAc,EAAd,EAAkBxB,EAAlB,EAAsB,EAACC,oBAAD,EAAYwB,8BAAZ,EAAtB,C","file":"db.js","sourcesContent":["import Sequelize from \"sequelize\";\n// import migrations from './migrations'\nimport models from \"./models\";\n\nconst db = {};\n\nconst sequelize = new Sequelize(process.env.DATABASE, process.env.DB_USER,\nprocess.env.DB_PASSWORD, { port: 3306, host: process.env.HOST, dialect:'mysql',logging:false });\n\n\n// load models\nObject\n    .keys(models)\n    .forEach((modelName) => {\n        const model = models[modelName](sequelize, Sequelize.DataTypes, Sequelize);\n        db[modelName] = model;\n    }, (err) => {\n        console.log(err)\n    });\n\n// invoke associations on each of the models\nObject\n    .keys(db)\n    .forEach((modelName) => {\n        if (db[modelName].associate) {\n            db[modelName].associate(db);\n        }\n    }, (err) => {\n        console.log(err)\n    });\n\nsequelize\n    .sync()\n    .then(() => {})\n\nexport default Object.assign({}, db, {sequelize, Sequelize});"]}