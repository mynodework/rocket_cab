{"version":3,"sources":["../../src/models/billingAccount.js"],"names":["sequelize","DataTypes","billingAccount","define","idaccount","type","UUID","primaryKey","STRING","currency","modifiedBy","email","userid","lastLogin","DATE","loginLocation","homePhone","businessPhone","mobilePhone","communicationMethod","createdBy","freezeTableName","createdAt","updatedAt","assosiate","models"],"mappings":";;;;;;kBAAe,UAASA,SAAT,EAAoBC,SAApB,EAA+B;AAC1C,QAAMC,iBAAiBF,UAAUG,MAAV,CAAiB,gBAAjB,EAAmC;AACtDC,mBAAW;AACPC,kBAAMJ,UAAUK,IADT;AAEPC,wBAAY;AAFL,SAD2C;AAKtDF,cAAMJ,UAAUO,MAAV,CAAiB,GAAjB,CALgD;AAMtDC,kBAAUR,UAAUO,MAAV,CAAiB,GAAjB,CAN4C;AAOtDE,oBAAYT,UAAUO,MAAV,CAAiB,EAAjB,CAP0C;AAQtD;;;;AAIAG,eAAOV,UAAUO,MAAV,CAAiB,IAAjB,CAZ+C;AAatDI,gBAAQX,UAAUO,MAAV,CAAiB,IAAjB,CAb8C;AActDK,mBAAWZ,UAAUa,IAdiC;AAetDC,uBAAed,UAAUO,MAAV,CAAiB,GAAjB,CAfuC;AAgBtDQ,mBAAWf,UAAUO,MAAV,CAAiB,EAAjB,CAhB2C;AAiBtDS,uBAAehB,UAAUO,MAAV,CAAiB,EAAjB,CAjBuC;AAkBtDU,qBAAajB,UAAUO,MAAV,CAAiB,EAAjB,CAlByC;AAmBtDW,6BAAqBlB,UAAUO,MAAV,CAAiB,EAAjB,CAnBiC;AAoBtDY,mBAAWnB,UAAUO,MAAV,CAAiB,EAAjB;AApB2C,KAAnC,EAqBpB;AACCa,yBAAiB,IADlB;AAECC,mBAAW,SAFZ;AAGCC,mBAAW;;AAHZ,KArBoB,CAAvB;;AA4BArB,mBAAesB,SAAf,GAA2B,UAACC,MAAD,EAAY,CAEtC,CAFD;;AAIA,WAAOvB,cAAP;AACH,C","file":"billingAccount.js","sourcesContent":["export default function(sequelize, DataTypes) {\n    const billingAccount = sequelize.define(\"billingAccount\", {\n        idaccount: {\n            type: DataTypes.UUID,\n            primaryKey: true\n        },\n        type: DataTypes.STRING(256),\n        currency: DataTypes.STRING(256),\n        modifiedBy: DataTypes.STRING(64),\n        /*address: DataTypes.STRING(256),\n        billingAddress: DataTypes.STRING(256),\n        mailingAddress: DataTypes.STRING(256),\n        companyId: DataTypes.STRING(64),*/\n        email: DataTypes.STRING(2048),\n        userid: DataTypes.STRING(2048),\n        lastLogin: DataTypes.DATE,\n        loginLocation: DataTypes.STRING(256),\n        homePhone: DataTypes.STRING(64),\n        businessPhone: DataTypes.STRING(64),\n        mobilePhone: DataTypes.STRING(64),\n        communicationMethod: DataTypes.STRING(64),\n        createdBy: DataTypes.STRING(64)\n    }, {\n        freezeTableName: true,\n        createdAt: 'created',\n        updatedAt: 'modified',\n\n    })\n\n    billingAccount.assosiate = (models) => {\n\n    }\n\n    return billingAccount;\n}"]}