{"version":3,"sources":["../../src/models/booking.js"],"names":["sequelize","DataTypes","booking","define","id","type","INTEGER","primaryKey","autoIncrement","allowNull","user_id","driver_id","main_fare","bargain_fare","booking_status","STRING","times","pickup","drops","cashType","indexes","freezeTableName","timestamps","hooks"],"mappings":";;;;;;kBAAe,UAASA,SAAT,EAAoBC,SAApB,EAA+B;AAC1C,QAAMC,UAAUF,UAAUG,MAAV,CAAiB,SAAjB,EAA4B;AACxCC,YAAI;AACAC,kBAAMJ,UAAUK,OADhB;AAEAC,wBAAY,IAFZ;AAGAC,2BAAe,IAHf;AAIAC,uBAAW;AAJX,SADoC;AAOxCC,iBAAS;AACLL,kBAAMJ,UAAUK,OADX;AAELG,uBAAW;AAFN,SAP+B;AAWxCE,mBAAW;AACPN,kBAAMJ,UAAUK,OADT;AAEPG,uBAAW;AAFJ,SAX6B;AAexCG,mBAAW;AACPP,kBAAMJ,UAAUK,OADT;AAEPG,uBAAW;AAFJ,SAf6B;AAmBxCI,sBAAc;AACVR,kBAAMJ,UAAUK,OADN;AAEVG,uBAAW;AAFD,SAnB0B;AAuBxCK,wBAAgB;AACZT,kBAAMJ,UAAUc,MAAV,CAAiB,GAAjB,CADM;AAEZN,uBAAW;AAFC,SAvBwB;AA2BxCO,eAAO;AACHX,kBAAMJ,UAAUc,MAAV,CAAiB,GAAjB,CADH;AAEHN,uBAAW;AAFR,SA3BiC;AA+BxCQ,gBAAQ;AACJZ,kBAAMJ,UAAUc,MAAV,CAAiB,GAAjB,CADF;AAEJN,uBAAW;AAFP,SA/BgC;AAmCxCS,eAAO;AACHb,kBAAMJ,UAAUc,MAAV,CAAiB,GAAjB,CADH;AAEHN,uBAAW;AAFR,SAnCiC;AAuCxCU,kBAAU;AACNd,kBAAMJ,UAAUc,MAAV,CAAiB,GAAjB,CADA;AAENN,uBAAW;AAFL;AAvC8B,KAA5B,EA2Cb;AACCW,iBAAS,EADV;AAECC,yBAAiB,IAFlB;AAGCC,oBAAY,KAHb;AAICC,eAAO;AAJR,KA3Ca,CAAhB;;AAkDA,WAAOrB,OAAP;AACH,C","file":"booking.js","sourcesContent":["export default function(sequelize, DataTypes) {\n    const booking = sequelize.define(\"booking\", {\n        id: {\n            type: DataTypes.INTEGER,\n            primaryKey: true,\n            autoIncrement: true,\n            allowNull: false\n        },\n        user_id: {\n            type: DataTypes.INTEGER,\n            allowNull: false\n        },\n        driver_id: {\n            type: DataTypes.INTEGER,\n            allowNull: false\n        },\n        main_fare: {\n            type: DataTypes.INTEGER,\n            allowNull: false\n        },\n        bargain_fare: {\n            type: DataTypes.INTEGER,\n            allowNull: false\n        },\n        booking_status: {\n            type: DataTypes.STRING(100),\n            allowNull: false\n        },\n        times: {\n            type: DataTypes.STRING(100),\n            allowNull: false\n        },\n        pickup: {\n            type: DataTypes.STRING(255),\n            allowNull: false\n        },\n        drops: {\n            type: DataTypes.STRING(255),\n            allowNull: false\n        },\n        cashType: {\n            type: DataTypes.STRING(100),\n            allowNull: false\n        }\n    }, {\n        indexes: [],\n        freezeTableName: true,\n        timestamps: false,\n        hooks: {}\n    })\n\n    return booking;\n}"]}