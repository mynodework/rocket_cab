{"version":3,"sources":["../../src/controllers/group.js"],"names":["GroupController","addGroup","req","res","next","provideGroup","checkBody","body","getValidationResult","then","group","create","response","json","status","data","err","handleErrorResponse","getAllGroup","findAll","updateGroup","update","where","idGroup","deleteGroup","destroy","params","message","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEaA,e,WAAAA,e;;;;;;;;;;;;;;4MAETC,Q,GAAW,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3B,oCAAcC,YAAd,CAA2BH,IAAII,SAA/B,EAA0CJ,IAAIK,IAA9C,EAAoDL,IAAIM,mBAAJ,EAApD,EAA+EC,IAA/E,CAAoF,UAACF,IAAD,EAAU;AAC1F,6BAAGG,KAAH,CAASC,MAAT,CAAgBT,IAAIK,IAApB,EAA0BE,IAA1B,CAA+B,UAACG,QAAD,EAAc;AACzCT,wBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaC,MAAMH,QAAnB,EAAT;AACH,iBAFD,EAEG,UAACI,GAAD;AAAA,2BAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,iBAFH;AAGH,aAJD,EAIG,UAACA,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAJH;AAKH,S,QAEDE,W,GAAc,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9B,yBAAGM,KAAH,CAASS,OAAT,CAAiB,EAAjB,EAAqBV,IAArB,CAA0B,UAACG,QAAD,EAAc;AACpCT,oBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaC,MAAMH,QAAnB,EAAT;AACH,aAFD,EAEG,UAACI,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDI,W,GAAc,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9B,yBAAGM,KAAH,CAASW,MAAT,CAAgBnB,IAAIK,IAApB,EAA0B,EAAEe,OAAO,EAAEC,SAASrB,IAAIK,IAAJ,CAASgB,OAApB,EAAT,EAA1B,EAAoEd,IAApE,CAAyE,UAACG,QAAD,EAAc;AACnFT,oBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaC,MAAMH,QAAnB,EAAT;AACH,aAFD,EAEG,UAACI,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDQ,W,GAAc,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9B,yBAAGM,KAAH,CAASe,OAAT,CAAiB,EAAEH,OAAO,EAAEC,SAASrB,IAAIwB,MAAJ,CAAWH,OAAtB,EAAT,EAAjB,EAA6Dd,IAA7D,CAAkE,UAACG,QAAD,EAAc;AAC5ET,oBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaa,SAAS,SAAtB,EAAiCZ,MAAMH,QAAvC,EAAT;AACH,aAFD,EAEG,UAACI,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAFH;AAGH,S;;;;;;AAIL,IAAMY,aAAa,IAAI5B,eAAJ,EAAnB;kBACe4B,U","file":"group.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport db from '../db';\nimport groupProvider from '../providers/groupProvider';\n\nexport class GroupController extends BaseAPIController {\n\n    addGroup = (req, res, next) => {\n        groupProvider.provideGroup(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            db.group.create(req.body).then((response) => {\n                res.json({ status: 1, data: response })\n            }, (err) => this.handleErrorResponse(res, err))\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    getAllGroup = (req, res, next) => {\n        db.group.findAll({}).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    updateGroup = (req, res, next) => {\n        db.group.update(req.body, { where: { idGroup: req.body.idGroup } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    deleteGroup = (req, res, next) => {\n        db.group.destroy({ where: { idGroup: req.params.idGroup } }).then((response) => {\n            res.json({ status: 1, message: \"deleted\", data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n}\n\nconst controller = new GroupController();\nexport default controller;"]}