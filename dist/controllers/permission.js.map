{"version":3,"sources":["../../src/controllers/permission.js"],"names":["PermissionController","addPermission","req","res","next","providePermissiosn","checkBody","body","getValidationResult","then","permission","create","response","json","status","data","err","handleErrorResponse","getAllPermission","findAll","updatePermission","update","where","idPermission","deletePermission","destroy","params","message","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEaA,oB,WAAAA,oB;;;;;;;;;;;;;;sNAETC,a,GAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAChC,yCAAmBC,kBAAnB,CAAsCH,IAAII,SAA1C,EAAqDJ,IAAIK,IAAzD,EAA+DL,IAAIM,mBAAJ,EAA/D,EAA0FC,IAA1F,CAA+F,UAACF,IAAD,EAAU;AACrG,6BAAGG,UAAH,CAAcC,MAAd,CAAqBT,IAAIK,IAAzB,EAA+BE,IAA/B,CAAoC,UAACG,QAAD,EAAc;AAC9CT,wBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaC,MAAMH,QAAnB,EAAT;AACH,iBAFD,EAEG,UAACI,GAAD;AAAA,2BAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,iBAFH;AAGH,aAJD,EAIG,UAACA,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAJH;AAKH,S,QAEDE,gB,GAAmB,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,yBAAGM,UAAH,CAAcS,OAAd,CAAsB,EAAtB,EAA0BV,IAA1B,CAA+B,UAACG,QAAD,EAAc;AACzCT,oBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaC,MAAMH,QAAnB,EAAT;AACH,aAFD,EAEG,UAACI,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDI,gB,GAAmB,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,yBAAGM,UAAH,CAAcW,MAAd,CAAqBnB,IAAIK,IAAzB,EAA+B,EAAEe,OAAO,EAAEC,cAAcrB,IAAIK,IAAJ,CAASgB,YAAzB,EAAT,EAA/B,EAAmFd,IAAnF,CAAwF,UAACG,QAAD,EAAc;AAClGT,oBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaC,MAAMH,QAAnB,EAAT;AACH,aAFD,EAEG,UAACI,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDQ,gB,GAAmB,UAACtB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,yBAAGM,UAAH,CAAce,OAAd,CAAsB,EAAEH,OAAO,EAAEC,cAAcrB,IAAIwB,MAAJ,CAAWH,YAA3B,EAAT,EAAtB,EAA4Ed,IAA5E,CAAiF,UAACG,QAAD,EAAc;AAC3FT,oBAAIU,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaa,SAAS,SAAtB,EAAiCZ,MAAMH,QAAvC,EAAT;AACH,aAFD,EAEG,UAACI,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBd,GAAzB,EAA8Ba,GAA9B,CAAT;AAAA,aAFH;AAGH,S;;;;;;AAIL,IAAMY,aAAa,IAAI5B,oBAAJ,EAAnB;kBACe4B,U","file":"permission.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport permissionProvider from '../providers/permissionProvider';\nimport db from '../db';\n\nexport class PermissionController extends BaseAPIController {\n\n    addPermission = (req, res, next) => {\n        permissionProvider.providePermissiosn(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            db.permission.create(req.body).then((response) => {\n                res.json({ status: 1, data: response })\n            }, (err) => this.handleErrorResponse(res, err))\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    getAllPermission = (req, res, next) => {\n        db.permission.findAll({}).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    updatePermission = (req, res, next) => {\n        db.permission.update(req.body, { where: { idPermission: req.body.idPermission } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    deletePermission = (req, res, next) => {\n        db.permission.destroy({ where: { idPermission: req.params.idPermission } }).then((response) => {\n            res.json({ status: 1, message: \"deleted\", data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n}\n\nconst controller = new PermissionController();\nexport default controller;"]}